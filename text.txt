@bot.message_handler(func=lambda message: message.text == 'English ðŸ‡¬ðŸ‡§')
def select_watch(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    select_watch = "Now select the watch company that you would like to purchase."
    btn0 = types.KeyboardButton('MystaStyle')
    btn1 = types.KeyboardButton('Rolex')
    btn2 = types.KeyboardButton('Omega')
    btn3 = types.KeyboardButton('Patek Philippe')
    btn4 = types.KeyboardButton('Audemars Piguet')
    btn5 = types.KeyboardButton('Tag Heuer')
    btn6 = types.KeyboardButton('Seiko')
    btn7 = types.KeyboardButton('Casio')
    btn8 = types.KeyboardButton('Fossil')
    btn9 = types.KeyboardButton('Citizen')
    btn10 = types.KeyboardButton('Timex')
    btn11 = types.KeyboardButton('Swatch')
    btn12 = types.KeyboardButton('Tissot')
    btn13 = types.KeyboardButton('Bulova')
    btn14 = types.KeyboardButton('Michael Kors')
    btn15 = types.KeyboardButton('DIOR')

    markup.add(btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12, btn13, btn14, btn15)
    bot.send_message(message.chat.id, select_watch, parse_mode='html', reply_markup=markup)


    def create_company_handler(company, models):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [types.KeyboardButton(model) for model in models]
        markup.add(*buttons)

        url_markup =  types.InlineKeyboardMarkup()
        url_btns = types.InlineKeyboardButton('PLACE AN ORDER', url='https://mustafapulse.ru/')
        url_markup.add(url_btns)
        

        @bot.message_handler(func=lambda message, comp=company: message.text == comp)
        def handle_company(message):
            bot.send_message(message.chat.id, f'Great, {message.from_user.first_name}, your choice fell on the company {company}.')
            bot.send_message(message.chat.id, 'Now select the watch model.', parse_mode='html', reply_markup=markup)

            def show_prices(message, company, models):
                formatted_prices = "\n".join(f"<b>{i + 1}. {model}</b>\n    <i>{price}</i>" for i, (model, price) in enumerate(models.items(), start=0))
                bot.send_message(message.chat.id, f"Prices for watches from {company}:\n{formatted_prices}", parse_mode='html')
            show_prices(message, company, models)

        @bot.message_handler(func=lambda message, comp=company, mods=models: message.text in [model for model in mods])
        def send_mess(message, comp=company, mods=models):
            chosen_model = next((model for model in mods if message.text == model), None)
            if chosen_model:
                price_range = mods[chosen_model]
                bot.send_message(message.chat.id, f"Perfectly! Your choice fell on the watch model {chosen_model}, cost within the limits of {price_range} depending on the configuration. Do you want to place an order now?)", reply_markup=url_markup)

    for company, models in base_watches.items():
        create_company_handler(company, models)

    @bot.message_handler(func=lambda message: message.text == btn0.text)
    def models(message):

        url_markup =  types.InlineKeyboardMarkup()
        url_btns = types.InlineKeyboardButton('PLACE AN ORDER', url='https://mustafapulse.ru/')
        url_markup.add(url_btns)

        bot.send_message(message.chat.id, 'Wow, MustaStyle is your choice! We will be happy to offer you a unique watch that suits your taste, color scheme and budget. Just tell us which watch you prefer by leaving a request on our website, and we will contact you as soon as possible. Trust us to create your perfect time accessory!', reply_markup=url_markup)


    def back(message, select_wat):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn0 = types.KeyboardButton('MystaStyle')
        btn1 = types.KeyboardButton('Rolex')
        btn2 = types.KeyboardButton('Omega')
        btn3 = types.KeyboardButton('Patek Philippe')
        btn4 = types.KeyboardButton('Audemars Piguet')
        btn5 = types.KeyboardButton('Tag Heuer')
        btn6 = types.KeyboardButton('Seiko')
        btn7 = types.KeyboardButton('Casio')
        btn8 = types.KeyboardButton('Fossil')
        btn9 = types.KeyboardButton('Citizen')
        btn10 = types.KeyboardButton('Timex')
        btn11 = types.KeyboardButton('Swatch')
        btn12 = types.KeyboardButton('Tissot')
        btn13 = types.KeyboardButton('Bulova')
        btn14 = types.KeyboardButton('Michael Kors')
        btn15 = types.KeyboardButton('DIOR')

        markup.add(btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12, btn13, btn14, btn15)
        bot.send_message(message.chat.id, select_wat, parse_mode='html', reply_markup=markup)

    def companies(message, select_wat):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn0 = types.KeyboardButton('MystaStyle')
        btn1 = types.KeyboardButton('Rolex')
        btn2 = types.KeyboardButton('Omega')
        btn3 = types.KeyboardButton('Patek Philippe')
        btn4 = types.KeyboardButton('Audemars Piguet')
        btn5 = types.KeyboardButton('Tag Heuer')
        btn6 = types.KeyboardButton('Seiko')
        btn7 = types.KeyboardButton('Casio')
        btn8 = types.KeyboardButton('Fossil')
        btn9 = types.KeyboardButton('Citizen')
        btn10 = types.KeyboardButton('Timex')
        btn11 = types.KeyboardButton('Swatch')
        btn12 = types.KeyboardButton('Tissot')
        btn13 = types.KeyboardButton('Bulova')
        btn14 = types.KeyboardButton('Michael Kors')
        btn15 = types.KeyboardButton('DIOR')

        markup.add(btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12, btn13, btn14, btn15)
        bot.send_message(message.chat.id, select_wat, parse_mode='html', reply_markup=markup)

